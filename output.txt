delay
main
	a sint32 32 1
a[1] array a
= symbol NoVtype
1000 const sint32


	assignr  ('1000', 'const', 'sint32') $a3
c variable sint08
> symbol NoVtype
0 const sint32


	assignr  ('0', 'const', 'sint32') $a3
c variable sint08
= symbol NoVtype
c variable sint08
- symbol NoVtype
1 const sint32


	assignr  ('1', 'const', 'sint32') $a3
i variable sint32
= symbol NoVtype
a[5] array a
+ symbol NoVtype
3 const sint32


	assignr  ('3', 'const', 'sint32') $a3

key variable sint32
= symbol NoVtype
0 const sint32


	assignr  ('0', 'const', 'sint32') $a3
LED variable sint32
= symbol NoVtype
0xfffffc60 const sint32


	assignr  ('0xfffffc60', 'const', 'sint32') $a3
1 const sint32


key variable sint32
= symbol NoVtype
key variable sint32
+ symbol NoVtype
1 const sint32


	assignr  ('1', 'const', 'sint32') $a3
$ symbol NoVtype
LED variable sint32
= symbol NoVtype
key variable sint32


	assignr  ('LED', 'variable', 'sint32') $a2
	assignr  ('key', 'variable', 'sint32') $a3
key variable sint32
> symbol NoVtype
100 const sint32


	assignr  ('100', 'const', 'sint32') $a3
key variable sint32
= symbol NoVtype
0 const sint32


	assignr  ('0', 'const', 'sint32') $a3
key variable sint32
> symbol NoVtype
10 const sint32


	assignr  ('10', 'const', 'sint32') $a3
key variable sint32
= symbol NoVtype
1 const sint32


	assignr  ('1', 'const', 'sint32') $a3
key variable sint32
- symbol NoVtype
= symbol NoVtype
3 const sint32


	assignr  ('key', 'variable', 'sint32') $a3
delay(a+5, k[2]) function void00



delay
	i sint32 $s4 0 sint32
	j sint32 $s3 0 sint32
	d sint32 delay_d 10 sint32
main
